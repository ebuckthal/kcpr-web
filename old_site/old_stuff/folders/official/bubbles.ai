%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(TM) 7.0
%%AI8_CreatorVersion: 8.0.1
%%For: (Julie Larsen) (julielarsen.com)
%%Title: (bubbles.ai)
%%CreationDate: (4/21/00) (11:38 AM)
%%BoundingBox: 84 312 515 501
%%HiResBoundingBox: 84.21 312.0791 514.21 500.0791
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 306.5 395.5 306.5 395.5
%AI3_TileBox: 8 10 600 784
%AI3_DocumentPreview: None
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 0
%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: 67 587 1 791 642 18 0 1 69 80 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:8 10
%%AI3_PaperRect:-8 784 604 -8
%%AI3_Margin:8 -9 -9 8
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI7_Thumbnail: 128 56 8
%%BeginData: 11194 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD3FFFA9A9A87E7E537E547E537E547E537E7E84FD6CFFA8A85353
%5A537E535A537E535A537E535A537E535A53537EA8FD40FFCAFFCACBCACB
%CACBCAFD1BFFA8A97E547E537E547E537E547E537E547E537E547E537E54
%7E537E5453A9A9FD38FFCACAA2C4C49BC4C4C49BC4C4C49BFD04C4A2CBCB
%FD12FFA959535A537E535A537E535A537E535A537E535A537E535A537E53
%5A537E535A537EA9FD33FFCACBFD17C4CBFD0EFFA87E7E547E537E547E53
%7E547E537E547E537E547E537E547E537E547E537E547E537E547E7EA9FD
%2EFFCACAC49BC4C4C49BC4C4C49BC4C4C49BC4C4C49BC4C4C49BC4C4C49B
%C4C4C4FD0BFF7E535A537E59355F5F345F34595935537E535A537E535A53
%7E535A537E535A537E535A537E535A537EFD2CFFFD21C4CACBFD06FFA953
%537E5459355F5F5F355F5F5F355F5F59537E547E537E547E537E547E537E
%547E537E547E537E547E537EFD28FFCAFD04C49BC4C4C49BC4C4C49BC4C4
%C49BC4C4C49BC4C4C49BC4C4C49BC4C4C49BC4C4C49BA2FD04FFA87E535A
%5359345F345F345F345F345F345F3435537E535A537E535A537E535A537E
%535A537E535A537E535A537EA8FD25FFCBFD28C4FFFFA97E547E537E5F5F
%355F5F5F355F5F5F355F5F5F3559547E537E547E537E547E537E547E537E
%547E537E547E537E547EA9FD23FFCAC4C49BC4C4C49BC4C4C49BC4C4C49B
%C4C4C49BC4C4C49BC4C4C49BC4C4C49BC4C4A27D7DA87D7D77A87DA25A53
%7E535A595F345F345F345F345F345F345F345F597E535A537E535A537E53
%5A537E535A537E535A537E535A537E535AA8FFCBC4CAC4C4C4CAC4C4C4CB
%CAFD14FFCAFD1FC4A28359355F5F5F355F5F5F355FC4A27E7E547EFD045F
%355F5F5F355F5F5F355F5F7E537E547E537E547E537E547E537E547E537E
%547E537E547E537E7E595FFD0DC4CBCAFD10FFA8C4C49BC4C4C49BC4C4C4
%9BC4C4C49BC4C4C49BC4C4C49B704CF827F8C4A27D34345F345F345F345F
%345F345F34599BC4A27E53355F5F345F345F345F345F345F3459535A537E
%535A537E535A537E535A537E535A537E535A537E53585F5F345F5FA29BC4
%C4C49BC4C4C49BC4C4C49BA2CBFD0EFFFD17C44BF8F84BF827F85F5F355F
%5F5F352D2E27352D5F5F355F5FA2C4C4C4A2537E5A59355F5F5F355F5F5F
%597E547E537E547E537E547E537E547E537E547E537E547E537E835F355F
%5F5F355F83FD10C4CBFD0BFFFD04C49BC4C4C49BC4C4C49BC4C4C49BC4C4
%C49BC4C44BF8F8A1C49B0505F8345F3404FD08F8050B345F59C4C4C49B9B
%777E5335595959355959535A537E535A537E535A537E535A537E535A537E
%535A537E5335345F345F345F345F345F7DC4C4C49BC4C4C49BC4C4C49BC4
%C4C49BC4FD0AFFFD16C47027F876C4C4595F2DF8275F5F35F8F8F8050527
%FD04F82D355FFD06C47E7E547E537E547E537E547E537E547E537E547E53
%7E547E537E547E537E547E59595F5F355F5F5F355F5F5F355FFD12C4FD08
%FFA2C4C49BC4C4C49BC4C4C49BC4C4C49BC4C4C44CF8C4C427F8F8709B04
%2E0B34F8F85F345F05F8F80B345F340B05F8F80B34A19BC4C4C49B9B777E
%535A537E535A537E535A537E535A537E535A537E535A537E535A537E5334
%345F345F345F345F345F345F347D9BC4C4C49BC4C4C49BC4C4C49BC4C4C4
%9B9BFD07FFCAFD10C47D4BF84BC4C4F8F84BC42E27F8045F35F85F5F3559
%F8F82E5F5F5F355F2DF82E5FA2FD07C4547E537E547E537E542852FD0527
%537E537E547E537E547E537E5A59355F5F5F355F5F5F355F5F5F2E2D5927
%5220F827FD0EC4FD06FFC4C4C49BC4C4C49BC4C4C49BC4C4C49B20FD04F8
%C421F8F8C45905042DF82E0BF80B345F34F8F804345F345F345F05F834A1
%9BC4C4C49BC4C4A2535A537E535A52FD0AF806537E535A537E535A535934
%5F345F345F345F345F345F2EFD09F8C4C49BC4C4C49BC4C4C49BC4C4C4FD
%05FFFD0EC4A1F8F8F827F827C44BF84C7D350558F8055F58F8355F5F5F27
%F82E5F355F5F5F3527F80BFD09C4A2547E537E29F8F8F827F8282727F8F8
%F8287E537E547E537E5459355F5F5F355F5F5F355F5F5F352DFD06F85221
%4BFD0FC4FD04FFC49BC4C4C49BC4C4C49BC4C4C44CF8F8F827F8F8F89BF8
%F820345F05F8340B34F8045F345F34F8F804345F345F345F05F82DC4C4C4
%9BC4C4C49BC4C47E535A52F8F8F8527E535A537E28F8F8F8535A537E535A
%5359345F345F340B05F8F80B345F345F2EF8F8F8274B9BC4C4709BC4C4C4
%9B707DC49BC4C4C49BC4C4CAFFFFFFFD0DC427F8F877C44BF84B70F8F87D
%5F352EF8053505F82D355F5F5F27F82E5F355F5F2727F8277DFD0AC4A27E
%53F8F8F8537E547E537E5428F8F8287E537E547E537E5F5F355F5F2727F8
%F8F8355F5F5F355F2EF8355F84FD09C452F8FD09C4FFFFFFC49BC4C4C49B
%C4C4C49BC4C4C44BF852C49BF8F8F84CF8F859345F3404F8F80405345F34
%5F3404F8F805FD06F82D77C4C4C49BC4C4C49BC4C4C45306F8F8F85A537E
%535A537E52F8F800535A537E535A595F345F34FD06F85F345F345F340BF8
%F82E279BF84CC49BC4C4C477F8F8C49BC4C4C49BC4C4C4CAFFFFCBFD11C4
%76F82727F8F8355F5F5F355F5F5F355F5F5F355F2EFD07F82D5F84FD0CC4
%A254F8F8F8547E537E547E5327F8F8527E547E537E5459355F5FF8F8F82D
%0BF8275F5F355F5F5F35F8F8F82EC4F8F8FD05C427F8F8FD0AC4FFFFA8C4
%C49BC4C4C49BC4C4C49BC4C4C49BC4C421F8F827F8055F340B05FD05F805
%F8275F3405F8F805F80504345F59A1C4C49BC4C4C49BC4C4C49BC4C47E27
%F8F8F8535A537E53FD04F806537E535A5359345F34F8F8F8275F05F82D5F
%345F345F340BF8F8F80BC4F8F870C4C49B4CF8F827C4C4C49BC4C4C49BC4
%C4C4FFFFCAFD10C476FD04F827355804F8F8F8270527F8F8F8355F59F827
%5F5F5F355F5F4C76274B277676FD08C4787E27F8F8F8272727FD05F8537E
%547E537E845F355F5F272E5F5FF8F8525F5F355F5F5F35F82E5F35A24BF8
%77C4C4C44BF8F870FD0BC4FFFFFFC49BC4C4C49BC4C4C49BC4C4C49BC4C4
%21FD04F82D0BFD04F8345F345F34F82D5F340BF8F8345F34F827F8F8F827
%FD04F8209BC4C4C49BC4C4A2535A28FD07F827F8F85A537E27F85359345F
%345F345F34F8F8F8345F345F345F345FF8F8345FA2F8F8F8C4C49BF8F8F8
%9BC4C4C49BC4C4C49BC4C4C4FD04FFFD0FC476FD04F85934F8F8275F5F35
%5F5F5F355F5F5F35F8F85F355FF8F84C70C4C4C44B27F8F827FD07C47E54
%7E537E5428537E5428F8F8547E53F8F87EFD045F355F5FF8F8F85F5F355F
%5F5F355F5FF8275F5FC476F8F84CC427F8F84CFD0CC4CAFFFFFFCBC49BC4
%C4C49BC4C4C49BC4C4C49B20FD04F83404F8F8345F345F345F345F345F34
%5FF8F8345F7DF8F870C4C49BC4C47027F8F8C49BC4C4C49B9B537E535A53
%7E535A537E27F8277E5306F8F8535F345F345F34FD05F82D5F345F345F34
%5FF8F8345F9B20F8F827C427F8F845C4C49BC4C4C49BC4C4C49BC4C4FD05
%FFFD0DC476F8F8F82E5F2EF8F82E5F5F355F5F5F35272E5F3505F827CAC4
%27F87DFD06C470F8F8FD07C47E547E537E547E537E5427F827547E53F8F8
%5A355F5F5F355FFD06F82E5F5F5F355F5FF8275F5FC476F84CF8C4F852F8
%FD0EC4FD06FFC4C4C49BC4C4C49BC4C4C49BFD05F8340BFD04F82D042DF8
%04F8F8F8345F27F852C4C420F8F8C4C49BC4C47D4BF8F8C49BC4C4C49BC4
%777E535A537E535A537EF8F8277E535A28F87D5F345F345F345F345F34F8
%F8F82E5F345F345FF8F8347D9B45FD05F821F8C4C4C49BC4C4C49BC4C4C4
%9BC4C4FD07FFCAFD0AC427F8F8F8275F3527FD08F82D2D5F7DA220F84BC4
%C477F8F8F8272727FD05F8FD07C47E537E547E537E547E53F8F827537E54
%F8277D5F05F8055F5F355F5F5F3527F8F8355F5F5F35F8275FA8C47DF87D
%F8F8F87DF8FD0EC4FD08FFA8CAC49BC4C4C49BC4C4FD05F8345F340B05F8
%05F8050B5F7D7DA1C4C427F852C49B70F8F827FD07F89BC4C4C49BC4C4C4
%775A537E535A537E53F8F8F8525A537E27F87E5F05F8F85F345F345F345F
%34F8F80B345F34F8F8F82EA1C44CF82152F8F821F8C49BC4C4C49BC4C4C4
%9BC4C4C49BFD0BFFCAFD06C44BFD04F82D355F5F5F355984A1CAFD06C427
%F827C4C4C4F84CC47DF8F8277776FD09C47E537E547E537E547E27F8007E
%537E54F8277D5FF8F8F85F5F355F5F5F355F27F8355F5F5FFD04F8C4C47D
%F876C4212777F8FD0EC4FD0EFFA2C4C4C4FD05F827A1A2A19BC4C4C49BC4
%C4C49BC4C4C452F852C49BC427F89B70F8F852C4C4C49BC4C4C49BC4C4C4
%775A537E535A537E53F8F8F8535A537EF8F8845F2DF8F80B345F345F345F
%34F8F804345F34FD04F8C4C44CF821C44B9B4CF84C9BC4C4C49BC4C4C49B
%C4C4C49BFD0DFFA8537E78A227FD05F8FD0FC470F821C4C4C420F8C4C4F8
%F827FD0BC47E547E537E547E5328F8F8287E547E53F82759355F5F0B355F
%5F5F355F5F5F2EF82E5F355F2DF852C4C4C47DF876C4C4C47DF877FD0DC4
%FD0CFFA8535A537E53F8F8F827F8F8709BC4C4C49BC4C4C49BC4C4C49BC4
%76F827C4C4C427F8C4C44BF821C49BC4C4C49BC4C4C49BC4537E535A537E
%535A28F8F806537E535AF8F8595F345F345F345F345F345F34F8F804345F
%345F34A1C4C49B4CF8F89BC4C44CF8F8C4C49BC4C4C49BC4C4C49BC4C4FD
%0CFFA97E537E547EF8F8F828F8F852C4C4C4774BFD09C470F827C4C4C470
%F870C4C4F8F8A2FD0AC47E547E537E547E5327F8F8537E547E52F8275935
%5F5F5F355F5F5F355F5F5F27F8585F355F5F7DFD04C47DF84BFD04C4F827
%FD0CC4CAFD0CFF7E535A537E53F8F8F852F8F8F89BC452F8F821C4C49BC4
%C4C49BC476F827C4C44C27F8274B9BF8F8209BC4C44B2770C4C49B7E537E
%535A537E535A27F8F85A537E53F8F8F8595F345F345F340B345F345F2EF8
%F82D345F34599BC4C4C49B4CF8F89BC4C4C4F8F877C49BC4C4C49BC4C4C4
%9BC4CBFD0CFF7E7E547E537EF8F8F87D53F8F84BC4F87D7720FD08C44CF8
%27C4C4FD04F827C4A1F827C4C44C272720A2C4C47E7E537E547E537E54F8
%F827547E537EF8F8F8275F5F353427F827F85F5F3504F8F8355F5F59FD06
%C47DF876FD04C427F8F8FD0BC4CBFD0CFF53537E520653F8F8F8537E27F8
%21C427F8C4F84BC4C4C49BC4C4C44BF827C49B454BF8F8F8C4C4F8F852C4
%2720C4F84BC4C47E535A537E535A537EF8F8277E535A532827F82859345F
%F8F8345F050434F8F8F82D5F345F7DC4C4C49BC4C44CF820C4C49BC452F8
%F870C4C49BC4C4C49BC4C4C4FD0DFFA97E5427FD04F827285428F8F8774C
%4B4BF870FD07C470F827FD09C44BF8F8C44BF84B7627C4A2547E537E547E
%537E53F8F8F8287E537E547E537E5A5F35F82E5F2E042E2DF8F8275F355F
%A8FD06C47D52F876FD05C427F8FD0AC4FD0EFFA8537E27FD07F827F8F8F8
%77C476F89BC4C4C49B214B4C4CF8F8C49BC4C4C49BC4C4C49BF8F8F89B21
%27F84CC4777E535A537E775A537DFD04F8535A537E535A537E5F5F04F834
%042E05F8F8F82D345FA2C49BC4C4C49BC476F8F8F8C4C49BC4C47D27C4C4
%C49BC4C4C49BC4C4FD0FFF7E53285328537E5427275354F8F8F84CF876FD
%05C427FD07F852FD07C4A2F8F827C470F870A27E537E54A2C4C4C4A2537E
%28F8537E547E537E547E53595F2DF8F827FD04F82D355FA2FD08C44CF8F8
%27FD10C4CAFD10FF53537E535A537E535A537E774C4CF827C4C4C49BC4C4
%FD08F84C9BC4C4C49BC4C4C476FD05F8C47E535A53A29BC4C4C49B77537E
%535A537E535A537E535A53593405FD04F8040B345FA2C49BC4C4C49BC4C4
%C427F8F8F89BC4C4C49BC4C4C49BC4C4C49BC4C4C4FD12FF7E547E537E54
%7E537E547EA2FD0AC4707D707DFD0EC44C764BC4A2547E537EFD06C4A27E
%547E537E547E537E547E537E5A59355F5F2D355F5F59CAFD0CC44B77FD0F
%C4FD14FFA87E5A537E535A537E7E7EC4C49BC4C4C49BC4C4C49BC4C4C49B
%C4C4C49BC4C4C49BC4C4C49BC4C4C49B9B537E535A53A29BC4C4C49B7E53
%7E535A537E535A537E535A537E595F345F345F34599BC4C4C49BC4C4C49B
%C4C4C49BC4C4C49BC4C4C49BC4C4C49BC4C4C49BC4CBFD17FFA8A9A8A97E
%FFFFFFCAFD1EC47E7E537E547E7EFD05C4787E537E547E537E547E537E54
%7E537E5A5F355F5F7DFD1EC4CBFD21FFA8C4C49BC4C4C49BC4C4C49BC4C4
%C49BC4C4C49BC4C4C49BC4C4C49BC4777E535A537E535A77A2A277537E53
%5A537E535A537E535A537E535A537E595F83A29BC4C4C49BC4C4C49BC4C4
%C49BC4C4C49BC4C4C49BC4C4C49BC4C4C49BC4CAFD23FFCBFD1AC4CB5A54
%7E537E547E537E547E537E547E537E547E537E547E537E547E537E545ACB
%FD1FC4CBFD25FFCA9BC4C4C49BC4C4C49BC4C4C49BC4C4C49BC4C4C49BC4
%C4C4CBFFFFA87E5A537E535A537E535A537E535A537E535A537E535A537E
%5353A8A8FFFFFFC49BC4C4C49BC4C4C49BC4C4C49BC4C4C49BC4C4C49BC4
%C4C49BC4C4C4CBFD27FFCBFD16C4FD07FFA8A97E547E537E547E537E547E
%537E547E537E547EA9A8FD07FFCBFD1AC4FD2AFFCBCAC4C4C49BC4C4C49B
%C4C4C49BC4C4C49BC4C4C4FD0BFFA9A97EA87E7E7D7E7E7E7D7E7EA884A9
%FD0CFFCBCA9BC4C49BC4C4C49BC4C4C49BC4C4C49BC4C4C49BC4C4CAFD2E
%FFCAFD0EC4CBFD2CFFCAFD12C4FD33FFCBC4C4C49BC4C4C49BC4CBCAFD31
%FFC4CAC49BC4C4C49BFD05C4CBFD3BFFCAFD3BFFCAFFCBFFCBFD93FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.2 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 50 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 40 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIDataProc null def
	/XIVersion 6 def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
end
currentdict /_colorimage known not {
	/colorimage where {
		/colorimage get /_colorimage exch def
	}{
		/_colorimage null def
	} ifelse
} if
/_image systemdict /image get def
/_currenttransfer systemdict /currenttransfer get def
/FourEqual {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual { 
				/plateindex 0 def
			}{
				0 1 0 0 FourEqual { 
					/plateindex 1 def
				}{
					0 0 1 0 FourEqual {
						/plateindex 2 def
					}{
						0 0 0 1 FourEqual { 
							/plateindex 3 def
						}{
							0 0 0 0 FourEqual {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/clrspaceissepn {
	type /arraytype eq 
} def
/clrspacegetname {
	dup clrspaceissepn {dup length 2 sub get}{pop ()} ifelse
} def
/clrspacegetalt {
	aload pop pop pop colormake
} def
/clrspacegetcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/clrspacemarksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				/findcmykcustomcolor where {
					pop
					dup length 2 sub get
					0.1 0.1 0.1 0.1 5 -1 roll
					findcmykcustomcolor 1 setcustomcolor
					systemdict /currentgray get exec
					1 ne
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/colormake {
	dup clrspacegetcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/colorexpand {
	dup clrspacegetname exch
	dup clrspaceissepn {
		clrspacegetalt
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				clrspacegetalt colortint colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/WalkRGBString {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/CMYKToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/SeparateCMYKImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne {
			sourcearray plateindex get exec
		}{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub {
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/ColorImageCompositeEmulator {
	pop true eq {
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne {
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq {/RGBToGrayImageProc}{/CMYKToGrayImageProc} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/colorimage {
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index
 end
	
	dup 8 eq exch 1 eq or not {
		/_colorimage load null ne {
			_colorimage
		}{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}{
		dup 3 eq TestPlateIndex dup -1 eq exch 5 eq or or {
			/_colorimage load null eq {
				ColorImageCompositeEmulator
			}{
				dup 1 eq {
					pop pop image
				}{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						grestore
					} if
				} ifelse
			} ifelse
		}{
			dup 1 eq {
				pop pop
				image
			}{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0 {			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace clrspacegetcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] makeimagedict _image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] makeimagedict _image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} stringapply
			} concatprocs _image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} stringapply
			} concatprocs false _pticomps
			/_colorimage load null eq {7 {pop} repeat}{_colorimage} ifelse
		} ifelse
	} ifelse
} def
/graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray proctintimage
} def
/cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK proctintimage
} def
/rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB proctintimage
} def
/tintimage {
	TestPlateIndex -1 eq {
		colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop graytintimage
		}{
			dup /DeviceRGB eq {
				pop rgbtintimage
			}{
				pop cmyktintimage
			} ifelse
		} ifelse
	}{
		dup clrspacemarksplate {
			plateindex 5 lt {
				colortocmyk plateindex get 1 exch sub
				exch {1 0}{0 1} ifelse () graytintimage
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () graytintimage
			} ifelse
		}{
			pop pop pop
			{pop 1} 0 1 () /DeviceGray proctintimage
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace tintimage
} def
/XIImage {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIChannelCount 1 eq {image}{false XIChannelCount colorimage} ifelse
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIType 1 eq {
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEncoding 0 ne XIVersion 6 le and {
			currentfile 128 string readline pop pop
		} if
		XICompression 0 eq {
			/XIBuffer1 XIRowBytes string def
			XIEncoding 0 eq {
				{currentfile XIBuffer1 readhexstring pop}
			}{
				{currentfile XIBuffer1 readstring pop}
			} ifelse
		}{
			/XIBuffer1 256 string def
			/XIBuffer2 XIRowBytes string def
			{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
			/ASCIIHexDecode filter /DCTDecode filter
			/XIFile exch def
			{XIFile XIBuffer2 readstring pop}
		} ifelse
		/XIDataProc exch def
		
		XIVersion 6 le {
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIType 1 eq {
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		XIEnable {
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Brick)
(Brick) 0 0 72 72 [
%AI3_Tile
(0 O 0 R 0.3 0.85 0.85 0 k
 0.3 0.85 0.85 0 K
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D
0 XR
0 0 m
0 72 L
72 72 L
72 0 L
0 0 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 0.3 w 4 M []0 d%AI3_Note:0 D
0 XR
0 68.4097 m
72 68.4097 l
S0 61.209 m
72 61.209 L
S0 54.0088 m
72 54.0088 L
S0 46.8076 m
72 46.8076 L
S0 39.6084 m
72 39.6084 L
S0 32.4072 m
72 32.4072 L
S0 25.207 m
72 25.207 L
S0 18.0059 m
72 18.0059 L
S0 10.8057 m
72 10.8057 L
S0 3.6064 m
72 3.6064 L
S68.4102 68.4097 m
68.4102 61.2217 l
S54.0098 68.4097 m
54.0098 61.2217 L
S39.6094 68.4097 m
39.6094 61.2217 L
S25.21 68.4097 m
25.21 61.2217 L
S10.8105 68.4097 m
10.8105 61.2217 L
S68.4102 53.9717 m
68.4102 46.7842 l
S54.0098 53.9717 m
54.0098 46.7842 L
S39.6094 53.9717 m
39.6094 46.7842 L
S25.21 53.9717 m
25.21 46.7842 L
S10.8105 53.9717 m
10.8105 46.7842 L
S68.4102 39.5967 m
68.4102 32.4092 l
S54.0098 39.5967 m
54.0098 32.4092 L
S39.6094 39.5967 m
39.6094 32.4092 L
S25.21 39.5967 m
25.21 32.4092 L
S10.8105 39.5967 m
10.8105 32.4092 L
S68.4102 25.2217 m
68.4102 18.0342 l
S54.0098 25.2217 m
54.0098 18.0342 L
S39.6094 25.2217 m
39.6094 18.0342 L
S25.21 25.2217 m
25.21 18.0342 L
S10.8105 25.2217 m
10.8105 18.0342 L
S68.4102 10.7842 m
68.4102 3.5967 l
S54.0098 10.7842 m
54.0098 3.5967 L
S39.6094 10.7842 m
39.6094 3.5967 L
S25.21 10.7842 m
25.21 3.5967 L
S10.8105 10.7842 m
10.8105 3.5967 L
S61.1973 3.5967 m
61.1973 0 L
S46.7969 3.5967 m
46.7969 0 L
S32.3965 3.5967 m
32.3965 0 L
S17.9971 3.5967 m
17.9971 0 L
S3.5967 3.5967 m
3.5967 0 l
S61.1973 18.0342 m
61.1973 10.8467 L
S46.7969 18.0342 m
46.7969 10.8467 L
S32.3965 18.0342 m
32.3965 10.8467 L
S17.9971 18.0342 m
17.9971 10.8467 L
S3.5967 18.0342 m
3.5967 10.8467 l
S61.1973 32.4092 m
61.1973 25.2217 L
S46.7969 32.4092 m
46.7969 25.2217 L
S17.9971 32.4092 m
17.9971 25.2217 L
S3.5967 32.4092 m
3.5967 25.2217 l
S61.1973 46.7842 m
61.1973 39.5967 L
S46.7969 46.7842 m
46.7969 39.5967 L
S32.3965 46.7842 m
32.3965 39.5967 L
S17.9971 46.7842 m
17.9971 39.5967 L
S3.5967 46.7842 m
3.5967 39.5967 l
S61.1973 61.2217 m
61.1973 54.0347 L
S46.7969 61.2217 m
46.7969 54.0347 L
S32.3965 61.2217 m
32.3965 54.0347 L
S17.9971 61.2217 m
17.9971 54.0347 L
S3.5967 61.2217 m
3.5967 54.0347 l
S61.1973 71.959 m
61.1973 68.4717 L
S46.7969 71.959 m
46.7969 68.4717 L
S32.3965 71.959 m
32.3965 68.4717 L
S17.9971 71.959 m
17.9971 68.4717 L
S3.5967 71.959 m
3.5967 68.4717 l
S32.3965 32.4092 m
32.3965 25.2217 L
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Confetti)
(Confetti) 4.85 3.617 76.85 75.617 [
%AI3_Tile
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D
0 XR
4.85 3.617 m
4.85 75.617 L
76.85 75.617 L
76.85 3.617 L
4.85 3.617 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0 g
 0 G
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 0.3 w 4 M []0 d%AI3_Note:0 D
0 XR
10.6 64.867 m
7.85 62.867 l
S9.1 8.617 m
6.85 6.867 l
S78.1 68.617 m
74.85 67.867 l
S76.85 56.867 m
74.35 55.117 l
S79.6 51.617 m
76.6 51.617 l
S76.35 44.117 m
73.6 45.867 l
S78.6 35.867 m
76.6 34.367 l
S76.1 23.867 m
73.35 26.117 l
S78.1 12.867 m
73.85 13.617 l
S68.35 14.617 m
66.1 12.867 l
S76.6 30.617 m
73.6 30.617 l
S62.85 58.117 m
60.956 60.941 l
S32.85 59.617 m
31.196 62.181 l
S47.891 64.061 m
49.744 66.742 l
S72.814 2.769 m
73.928 5.729 l
S67.976 2.633 m
67.35 5.909 l
S61.85 27.617 m
59.956 30.441 l
S53.504 56.053 m
51.85 58.617 l
S52.762 1.779 m
52.876 4.776 l
S45.391 5.311 m
47.244 7.992 l
S37.062 3.375 m
35.639 5.43 l
S55.165 34.828 m
57.518 37.491 l
S20.795 3.242 m
22.12 5.193 l
S14.097 4.747 m
15.008 8.965 l
S9.736 1.91 m
8.073 4.225 l
S31.891 5.573 m
32.005 8.571 l
S12.1 70.367 m
15.6 68.867 l
S9.35 54.867 m
9.6 58.117 l
S12.85 31.867 m
14.35 28.117 l
S10.1 37.367 m
12.35 41.117 l
S34.1 71.117 m
31.85 68.617 l
S38.35 71.117 m
41.6 68.367 l
S55.1 71.117 m
58.35 69.117 l
S57.35 65.117 m
55.35 61.867 l
S64.35 66.367 m
69.35 68.617 l
S71.85 62.867 m
69.35 61.117 l
S23.6 70.867 m
23.6 67.867 l
S20.6 65.867 m
17.35 65.367 l
S24.85 61.367 m
25.35 58.117 l
S25.85 65.867 m
29.35 66.617 l
S14.1 54.117 m
16.85 56.117 l
S12.35 11.617 m
12.6 15.617 l
S12.1 19.867 m
14.35 22.367 l
S26.1 9.867 m
23.6 13.367 l
S34.6 47.117 m
32.1 45.367 l
S62.6 41.867 m
59.85 43.367 l
S31.6 35.617 m
27.85 36.367 l
S36.35 26.117 m
34.35 24.617 l
S33.85 14.117 m
31.1 16.367 l
S37.1 9.867 m
35.1 11.117 l
S34.35 20.867 m
31.35 20.867 l
S44.6 56.617 m
42.1 54.867 l
S47.35 51.367 m
44.35 51.367 l
S44.1 43.867 m
41.35 45.617 l
S43.35 33.117 m
42.6 30.617 l
S43.85 23.617 m
41.1 25.867 l
S44.35 15.617 m
42.35 16.867 l
S67.823 31.1 m
64.823 31.1 l
S27.1 32.617 m
29.6 30.867 l
S31.85 55.117 m
34.85 55.117 l
S19.6 40.867 m
22.1 39.117 l
S16.85 35.617 m
19.85 35.617 l
S20.1 28.117 m
22.85 29.867 l
S52.1 42.617 m
54.484 44.178 l
S52.437 50.146 m
54.821 48.325 l
S59.572 54.133 m
59.35 51.117 l
S50.185 10.055 m
53.234 9.928 l
S51.187 15.896 m
53.571 14.075 l
S58.322 19.883 m
59.445 16.823 l
S53.1 32.117 m
50.6 30.367 l
S52.85 24.617 m
49.6 25.617 l
S61.85 9.117 m
59.1 10.867 l
S69.35 34.617 m
66.6 36.367 l
S67.1 23.617 m
65.1 22.117 l
S24.435 46.055 m
27.484 45.928 l
S25.437 51.896 m
27.821 50.075 l
S62.6 47.117 m
65.321 46.575 l
S19.85 19.867 m
20.35 16.617 l
S21.85 21.867 m
25.35 22.617 l
S37.6 62.867 m
41.6 62.117 l
S38.323 42.1 m
38.823 38.6 l
S69.35 52.617 m
66.85 53.867 l
S14.85 62.117 m
18.1 59.367 l
S9.6 46.117 m
7.1 44.367 l
S20.6 51.617 m
18.6 50.117 l
S46.141 70.811 m
47.994 73.492 l
S69.391 40.561 m
71.244 43.242 l
S38.641 49.311 m
39.35 52.117 l
S25.141 16.811 m
25.85 19.617 l
S36.6 32.867 m
34.6 31.367 l
S6.1 68.617 m
2.85 67.867 l
S4.85 56.867 m
2.35 55.117 l
S7.6 51.617 m
4.6 51.617 l
S6.6 35.867 m
4.6 34.367 l
S6.1 12.867 m
1.85 13.617 l
S4.6 30.617 m
1.6 30.617 l
S72.814 74.769 m
73.928 77.729 l
S67.976 74.633 m
67.35 77.909 l
S52.762 73.779 m
52.876 76.776 l
S37.062 75.375 m
35.639 77.43 l
S20.795 75.242 m
22.12 77.193 l
S9.736 73.91 m
8.073 76.225 l
S10.1 23.617 m
6.35 24.367 l
S73.217 18.276 m
71.323 21.1 l
S28.823 39.6 m
29.505 42.389 l
S49.6 38.617 m
47.6 37.117 l
S60.323 73.6 m
62.323 76.6 l
S60.323 1.6 m
62.323 4.6 l
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Leaves - Fall )
(Leaves - Fall ) 0 0 64.0781 78.9336 [
%AI3_Tile
(0 O 0 R 0.05 0.2 1 0 k
 0.05 0.2 1 0 K
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D
0 XR
64.0781 78.9336 m
64.0781 0 L
0 0 L
0 78.9336 L
64.0781 78.9336 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.83 0 1 0 k
 0.83 0 1 0 K
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 1 w 4 M []0 d%AI3_Note:1 D
0 XR
29.7578 0.9902 m
30.4346 1.1914 30.7246 1.3428 V
29.2559 4.0547 33.707 8.3359 34.627 9.0762 C
35.2275 8.8506 35.3477 6.3184 34.6699 4.9805 C
35.5137 5.1035 37.7031 3.7256 38.4609 2.4365 C
38.5254 3.125 40.0957 6.0664 40.9219 6.4434 C
40.002 6.8408 39.3359 8.3135 38.5742 9.7617 C
39.5957 9.9287 40.9961 9.0078 42.4668 8.1025 C
42.9814 8.9043 44.3555 9.875 45.6143 10.3916 C
44.5264 11.0781 44.0313 11.8203 43.5352 13.2793 C
42.4922 12.7139 40.3057 12.5645 39.7764 12.8516 C
40.291 13.9648 42.5371 14.5078 43.2676 14.4551 C
43.0137 15.3164 42.8652 17.4697 43.0391 20.0625 C
41.3789 18.7461 39.834 17.4297 38.1738 17.4883 C
38.4434 16.0664 37.8076 14.2607 37.4307 13.7676 C
36.8574 14.5117 36.4463 15.3389 36.8008 17.3164 C
35.3486 17.8008 34.1113 18.3467 32.7373 19.6045 C
32.7373 17.7734 32.166 16.5723 31.2969 15.2959 C
32.5576 14.8076 33.8301 13.6045 33.8252 12.5664 C
32.9775 12.7178 31.2852 13.4619 30.793 14.4551 C
30.0742 13.707 28.3906 12.3984 26.7871 12.3945 C
27.9746 11.5391 28.8945 10.5059 28.9893 8.5938 C
30.2422 9.5645 32.6953 10.1797 34.0752 9.582 C
29.2344 5.3457 29.7031 2.3125 29.7578 0.9902 C
f13.8525 29.9844 m
13.3281 29.5127 13.1309 29.25 V
15.623 27.4326 13.3691 21.6074 12.8555 20.5439 C
12.2168 20.4883 10.8096 23.2285 10.8457 24.7266 C
9.7129 23.9707 8.0488 24.0918 6.4463 24.3779 C
7.0186 23.2891 6.6172 21.3447 5.8164 20.5439 C
6.8184 20.5801 8.1699 19.8652 9.4785 18.8838 C
8.6436 18.0645 6.8164 18.2246 4.9004 18.8838 C
4.9004 17.5107 4.0781 15.7734 3.2412 14.5918 C
4.5576 14.6484 5.7031 13.9629 6.5605 12.9316 C
7.2256 14.5 9.2598 15.6133 10.166 15.5645 C
10.1826 14.1992 8.6094 12.1094 7.5879 11.7109 C
8.1875 11.041 9.207 9.5107 10.166 7.0947 C
10.9648 9.0205 12.1348 10.2627 13.3672 11.1953 C
12.2256 12.7578 12.3994 13.6289 12.7988 15.1074 C
13.541 14.5664 14.5723 14.1338 14.7441 12.1309 C
16.4609 12.416 17.5957 12.3447 19.0938 11.4434 C
18.6387 13.1055 18.6348 14.707 18.9551 16.4063 C
17.1055 16.2666 15.5449 16.4795 14.5156 17.9688 C
15.3457 18.1953 17.6055 18.2549 18.4795 17.3223 C
18.8066 18.3047 19.7012 19.7109 21.1475 20.4043 C
19.707 20.6641 18.7227 21.7637 17.8135 23.4492 C
17.1006 22.0332 14.873 20.3691 13.3711 20.3145 C
15.373 24.3779 15.373 27.2959 13.8525 29.9844 C
f41.2324 26.0742 m
41.5518 26.7021 41.7549 26.959 V
44.1523 25.0176 48.958 28.3262 49.8535 29.0957 C
49.7432 29.7266 47.6182 30.8643 45.9004 29.834 C
46.3408 31.123 45.4395 33.084 44.2402 34.126 C
45.9805 34.0254 48.126 35.3867 48.6484 36.1289 C
48.8701 35.1514 50.0527 33.8809 51.3379 32.8672 C
51.6895 33.8398 50.9941 35.958 50.0781 37.5605 C
51.3125 38.0605 52.4248 38.9912 52.8828 40.25 C
53.3398 38.9336 54.3428 38.2598 55.6875 37.5039 C
54.5273 36.0762 53.7471 33.9023 54.0273 33.0391 C
55.3496 33.374 56.9209 36.0918 57.0439 37.1816 C
57.9189 36.415 59.4727 35.7285 62.0537 35.4219 C
60.3535 34.3438 59.9902 32.3516 59.4063 30.9219 C
58.2588 31.3682 56.0898 31.4277 55.1152 30.8643 C
55.8281 30.2852 57.168 29.7344 59.1777 29.7207 C
59.1777 28.1758 59.6406 27.043 60.8945 25.8281 C
59.1719 25.8418 57.0723 25.3555 55.5762 24.9629 C
55.3281 26.292 54.4844 27.8887 53.3398 28.2891 C
53.334 27.4277 53.5996 25.1797 54.4844 24.5117 C
53.6201 23.9443 52.3672 22.5674 51.9102 20.8496 C
51.2881 22.1758 50.4268 23.4805 48.5645 23.9238 C
49.749 24.9766 50.584 26.9941 50.25 28.4609 C
45.1973 24.4785 42.5215 25.7773 41.2324 26.0742 C
f27.7578 38.7324 m
28.4346 38.9316 28.7246 39.084 V
27.2559 41.7969 31.707 46.0776 32.627 46.8169 C
33.2275 46.5918 33.3477 44.0586 32.6699 42.7227 C
33.5137 42.8457 35.7031 41.4678 36.4609 40.1787 C
36.5254 40.8652 38.0957 43.8066 38.9219 44.1846 C
38.002 44.582 37.3359 46.0547 36.5742 47.5039 C
37.5957 47.6709 38.9961 46.7485 40.4668 45.8438 C
40.9814 46.6445 42.3555 47.6177 43.6143 48.1328 C
42.5264 48.8198 42.0313 49.5615 41.5352 51.0205 C
40.4922 50.4556 38.3057 50.3057 37.7764 50.5938 C
38.291 51.7056 40.5371 52.2485 41.2676 52.1958 C
41.0137 53.0576 40.8652 55.2109 41.0391 57.8037 C
39.3789 56.4878 37.834 55.1719 36.1738 55.2285 C
36.4434 53.8076 35.8076 52.002 35.4307 51.5088 C
34.8574 52.2529 34.4463 53.0796 34.8008 55.0576 C
33.3486 55.5425 32.1113 56.0879 30.7373 57.3467 C
30.7373 55.5146 30.166 54.314 29.2969 53.0366 C
30.5576 52.5488 31.8301 51.3467 31.8252 50.3076 C
30.9775 50.46 29.2852 51.2036 28.793 52.1958 C
28.0742 51.4497 26.3906 50.1396 24.7871 50.1357 C
25.9746 49.2817 26.8945 48.2466 26.9893 46.335 C
28.2422 47.3057 30.6953 47.9209 32.0752 47.3237 C
27.2344 43.0869 27.7031 40.0547 27.7578 38.7324 C
f13.5195 70.3916 m
12.9941 69.9209 12.7988 69.6587 V
15.2891 67.8418 13.0352 62.0146 12.5225 60.9517 C
11.8828 60.8955 10.4766 63.6367 10.5117 65.1348 C
9.3809 64.3789 7.7148 64.4995 6.1133 64.7856 C
6.6855 63.6987 6.2842 61.7529 5.4834 60.9517 C
6.4854 60.9878 7.8359 60.2729 9.1455 59.2925 C
8.3105 58.4717 6.4834 58.6338 4.5674 59.2925 C
4.5674 57.9189 3.7461 56.1816 2.9082 54.9995 C
4.2246 55.0576 5.3691 54.3706 6.2275 53.3408 C
6.8926 54.9097 8.9258 56.0215 9.832 55.9727 C
9.8496 54.6079 8.2764 52.5176 7.2539 52.1187 C
7.8545 51.4497 8.873 49.9189 9.832 47.5039 C
10.6309 49.4297 11.8008 50.6719 13.0342 51.6045 C
11.8926 53.1655 12.0664 54.0366 12.4648 55.5146 C
13.209 54.9746 14.2393 54.5415 14.4102 52.5386 C
16.127 52.8247 17.2637 52.7529 18.7598 51.8525 C
18.3057 53.5137 18.3027 55.1147 18.623 56.8149 C
16.7725 56.6748 15.2129 56.8887 14.1826 58.377 C
15.0117 58.6035 17.2725 58.6626 18.1465 57.731 C
18.4736 58.7129 19.3691 60.1187 20.8145 60.8125 C
19.375 61.0728 18.3896 62.1719 17.4805 63.8579 C
16.7676 62.4429 14.541 60.7769 13.0371 60.7227 C
15.041 64.7856 15.041 67.7046 13.5195 70.3916 C
f41.2324 64.4824 m
41.5518 65.1113 41.7549 65.3682 V
44.1523 63.4272 48.958 66.7354 49.8535 67.5034 C
49.7432 68.1362 47.6182 69.2725 45.9004 68.2422 C
46.3408 69.5313 45.4395 71.4922 44.2402 72.5342 C
45.9805 72.4341 48.126 73.7954 48.6484 74.5371 C
48.8701 73.5601 50.0527 72.29 51.3379 71.2754 C
51.6895 72.249 50.9941 74.3662 50.0781 75.9683 C
51.3125 76.4692 52.4248 77.3994 52.8828 78.6582 C
53.3398 77.3423 54.3428 76.667 55.6875 75.9111 C
54.5273 74.4844 53.7471 72.3101 54.0273 71.4473 C
55.3496 71.7822 56.9209 74.5 57.0439 75.5903 C
57.9189 74.8232 59.4727 74.1372 62.0537 73.8311 C
60.3535 72.7534 59.9902 70.7612 59.4063 69.3301 C
58.2588 69.7773 56.0898 69.8364 55.1152 69.2725 C
55.8281 68.6934 57.168 68.1431 59.1777 68.1284 C
59.1777 66.583 59.6406 65.4512 60.8945 64.2373 C
59.1719 64.249 57.0723 63.7632 55.5762 63.3721 C
55.3281 64.7002 54.4844 66.2974 53.3398 66.6973 C
53.334 65.8364 53.5996 63.5874 54.4844 62.9214 C
53.6201 62.353 52.3672 60.9751 51.9102 59.2583 C
51.2881 60.583 50.4268 61.8882 48.5645 62.333 C
49.749 63.3862 50.584 65.4033 50.25 66.8691 C
45.1973 62.8872 42.5215 64.1851 41.2324 64.4824 C
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Stripes)
(Stripes) 8.45 4.6001 80.45 76.6001 [
%AI3_Tile
(0 O 0 R 1 0.07 1 0 k
 1 0.07 1 0 K
) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 3.6 w 4 M []0 d%AI3_Note:0 D
0 XR
8.2 8.2 m
80.7 8.2 L
S8.2 22.6001 m
80.7 22.6001 L
S8.2 37.0002 m
80.7 37.0002 L
S8.2 51.4 m
80.7 51.4 L
S8.2 65.8001 m
80.7 65.8001 L
S8.2 15.4 m
80.7 15.4 L
S8.2 29.8001 m
80.7 29.8001 L
S8.2 44.2 m
80.7 44.2 L
S8.2 58.6001 m
80.7 58.6001 L
S8.2 73.0002 m
80.7 73.0002 L
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
4 Bn
%AI5_BeginGradient: (Black, White)
(Black, White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Chrome)
(Chrome) 0 6 Bd
[
0
<
464646454545444444444343434342424241414141404040403F3F3F3E3E3E3E3D3D3D3C3C3C3C3B
3B3B3B3A3A3A39393939383838383737373636363635353535343434333333333232323131313130
3030302F2F2F2E2E2E2E2D2D2D2D2C2C2C2B2B2B2B2A2A2A2A292929282828282727272626262625
2525252424242323232322222222212121202020201F1F1F1F1E1E1E1D1D1D1D1C1C1C1B1B1B1B1A
1A1A1A1919191818181817171717161616151515151414141413131312121212111111101010100F
0F0F0F0E0E0E0D0D0D0D0C0C0C0C0B0B0B0A0A0A0A09090909080808070707070606060505050504
04040403030302020202010101010000
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
1F1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1A1A1A1A1A
1A1A1A19191919191919191818181818181818181717171717171717161616161616161615151515
15151515151414141414141414131313131313131312121212121212121211111111111111111010
1010101010100F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C
0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A090909090909090909080808080808080807070707070707
07060606060606060606050505050505050504040404040404040303030303030303030202020202
02020201010101010101010000000000
>
1 %_Br
0
0.275
1
<
6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544
434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F
>
1 %_Br
0
<
00000101010102020202030303040404040505050606060607070707080808090909090A0A0A0A0B
0B0B0C0C0C0C0D0D0D0D0E0E0E0F0F0F0F1010101111111112121212131313141414141515151516
161617171717181818181919191A1A1A1A1B1B1B1C1C1C1C1D1D1D1D1E1E1E1F1F1F1F2020202021
212122222222232323232424242525252526262627272727282828282929292A2A2A2A2B2B2B2B2C
2C2C2D2D2D2D2E2E2E2E2F2F2F303030303131313232323233333333343434353535353636363637
373738383838393939393A3A3A3B3B3B3B3C3C3C3D3D3D3D3E3E3E3E3F3F3F404040404141414142
42424343434344444444454545464646
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
00000101020203030304040505050606070708080809090A0A0B0B0B0C0C0D0D0D0E0E0F0F101010
1111121212131314141515151616171718181819191A1A1A1B1B1C1C1D1D1D1E1E1F1F1F20202121
222222232324242525252626272727282829292A2A2A2B2B2C2C2D2D2D2E2E2F2F2F303031313232
32333334343435353636373737383839393A3A3A3B3B3C3C3C3D3D3E3E3F3F3F4040414142424243
4344444445454646474747484849494A4A4A4B4B4C4C4C4D4D4E4E4F4F4F50505151515252535354
54545555565657575758585959595A5A5B5B5C5C5C5D5D5E5E5E5F5F606061616162626363646464
6565666666676768686969696A6A6B6B
>
1 %_Br
1
0 %_Br
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
4D4C4C4C4B4B4B4A4A4A4A4949494848484747474746464645454544444444434343424242414141
414040403F3F3F3E3E3E3E3D3D3D3C3C3C3B3B3B3B3A3A3A39393938383838373737363636353535
35343434333333323232323131313030302F2F2F2F2E2E2E2D2D2D2C2C2C2C2B2B2B2A2A2A292929
2928282827272726262626252525242424232323232222222121212020201F1F1F1F1E1E1E1D1D1D
1C1C1C1C1B1B1B1A1A1A191919191818181717171616161615151514141413131313121212111111
101010100F0F0F0E0E0E0D0D0D0D0C0C0C0B0B0B0A0A0A0A09090908080807070707060606050505
04040404030303020202010101010000
>
0
0
1 %_Br
[
1 0 50 92 %_Bs
0 0.275 1 0.12 1 50 59 %_Bs
0 0.275 1 0.42 1 50 50 %_Bs
1 0 50 49 %_Bs
1 0 50 41 %_Bs
1 0.3 0 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
0
1 %_Br
1
<
0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E
2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253545556
5758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E
7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6
A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
F7F8F9FAFBFCFDFEFF
>
0
0
1 %_Br
1
<
00000000000000000000000000000000000001010101010101010101010101010101010101010101
01010101010101010101010101010202020202020202020202020202020202020202020202020202
02020202020202020202030303030303030303030303030303030303030303030303030303030303
03030303030304040404040404040404040404040404040404040404040404040404040404040404
04040505050505050505050505050505050505050505050505050505050505050505050505050606
06060606060606060606060606060606060606060606060606060606060606060607070707070707
07070707070707070707070707070707
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1
0
1 %_Br
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
1 %_Br
[
0 1 0 0 1 50 100 %_Bs
1 1 0 0 1 50 80 %_Bs
1 0.0279 0 0 1 50 60 %_Bs
1 0 1 0 1 50 40 %_Bs
0 0 1 0 1 50 20 %_Bs
0 1 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Orange Radial)
(Yellow & Orange Radial) 1 2 Bd
[
0
<
0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122
232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748
494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2
F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEB
EBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E6
>
0
1 %_Br
[
0 0 1 0 1 52 19 %_Bs
0 0.55 0.9 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 k
([Registration]) Pc
0 0 0 0 k
(C=0 M=0 Y=0 K=0) Pc
0 0 0 1 k
(C=0 M=0 Y=0 K=100) Pc
0 0.1 1 0 k
(C=0 M=10 Y=100 K=0) Pc
0 0.5 0 0 k
(C=0 M=50 Y=0 K=0) Pc
0 0.5 1 0 k
(C=0 M=50 Y=100 K=0) Pc
1 0.55 1 0 k
(C=100 M=55 Y=100 K=0) Pc
1 0.9 0.1 0 k
(C=100 M=90 Y=10 K=0) Pc
0.15 1 1 0 k
(C=15 M=100 Y=100 K=0) Pc
0.45 0.9 0 0 k
(C=45 M=90 Y=0 K=0) Pc
0.5 0.4 0.3 0 k
(C=50 M=40 Y=30 K=0) Pc
0.5 0.85 1 0 k
(C=50 M=85 Y=100 K=0) Pc
0.75 0.05 1 0 k
(C=75 M=5 Y=100 K=0) Pc
0.75 0.9 0 0 k
(C=75 M=90 Y=0 K=0) Pc
0.8 0.05 0 0 k
(C=80 M=5 Y=0 K=0) Pc
Bb
2 (Black, White) -7885 8587 0 0 1 0 0 1 0 0 Bg
0 BB
(Black, White) Pc
Bb
2 (Chrome) -7885 8587 0 0 1 0 0 1 0 0 Bg
0 BB
(Chrome) Pc
Bb
2 (Rainbow) -7885 8587 0 0 1 0 0 1 0 0 Bg
0 BB
(Rainbow) Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) -7885 8587 0 0 1 0 0 1 0 0 Bg
0 BB
(Yellow & Orange Radial) Pc
(Brick) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Brick) Pc
(Confetti) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Confetti) Pc
(Leaves - Fall ) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Leaves - Fall ) Pc
(Stripes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Stripes) Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
q300 Ar
0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D
0 XR
84.21 312.0791 m
84.21 500.0791 l
514.21 500.0791 l
514.21 312.0791 l
84.21 312.0791 l
hWn/BBAccumRotation (0.000000) XT
0 O
0.53 0.39 0 0 k
125.3105 370.0537 m
125.3105 384.4131 139.6572 396.0537 157.3555 396.0537 c
175.0537 396.0537 189.4014 384.4131 189.4014 370.0537 c
189.4014 355.6943 175.0537 344.0537 157.3555 344.0537 c
139.6572 344.0537 125.3105 355.6943 125.3105 370.0537 c
125.3105 370.0537 l
f/BBAccumRotation (0.000000) XT
219.2129 413.2495 m
219.2129 461.2046 267.7002 500.0786 327.5127 500.0786 c
387.3271 500.0786 435.8135 461.2046 435.8135 413.2495 c
435.8135 365.2949 387.3271 326.4209 327.5127 326.4209 c
267.7002 326.4209 219.2129 365.2949 219.2129 413.2495 c
219.2129 413.2495 l
f/BBAccumRotation (0.000000) XT
0 0.43 0.0039 0 k
358.3701 393.5146 m
358.3701 435.1777 393.2549 468.9512 436.29 468.9512 c
479.3232 468.9512 514.21 435.1777 514.21 393.5146 c
514.21 351.8525 479.3232 318.0791 436.29 318.0791 c
393.2549 318.0791 358.3701 351.8525 358.3701 393.5146 c
358.3701 393.5146 l
f/BBAccumRotation (0.000000) XT
0.67 0 0.42 0 k
415.0537 465.8228 m
428.8408 451.4238 437.4697 433.4648 437.0225 414.001 c
436.21 378.6113 401.21 347.9736 381.21 339.0791 c
366.21 351.9268 358.5576 366.7256 358.21 382.5645 c
357.21 428.0264 374.21 454.7104 415.0537 465.8228 c
415.0537 465.8228 l
f/BBAccumRotation (0.000000) XT
0 0.43 0.0039 0 k
84.21 436.5791 m
84.21 466.6787 123.1611 491.0791 171.21 491.0791 c
219.2598 491.0791 258.21 466.6787 258.21 436.5791 c
258.21 406.4785 219.2598 382.0791 171.21 382.0791 c
123.1611 382.0791 84.21 406.4785 84.21 436.5791 c
84.21 436.5791 l
f/BBAccumRotation (0.000000) XT
161.21 393.5791 m
161.21 435.001 191.4307 468.5791 228.71 468.5791 c
265.9902 468.5791 296.21 435.001 296.21 393.5791 c
296.21 352.1572 265.9902 318.5791 228.71 318.5791 c
191.4307 318.5791 161.21 352.1572 161.21 393.5791 c
161.21 393.5791 l
f/BBAccumRotation (0.000000) XT
0.67 0 0.42 0 k
243.1738 466.7749 m
249.2871 459.5991 252.71 451.5635 252.71 443.0791 c
252.71 413.7266 211.7422 389.7451 160.1455 388.1621 c
159.2041 392.4961 158.71 396.9834 158.71 401.5791 c
158.71 438.3062 190.2734 468.0791 229.21 468.0791 c
233.9912 468.0791 238.6602 467.6299 243.1738 466.7749 c
243.1738 466.7749 l
f/BBAccumRotation (0.000000) XT
0 0 0 1 k
0 R
0 0 0 1 K
0.5022 w 3.8637 M201.874 414.2642 m
194.1445 416.7549 194.8779 418.6577 186.9365 417.1353 c
181.6455 416.0977 173.9053 412.144 173.9053 406.9756 c
173.9053 399.4238 193.5313 397.3955 205.3887 405.0762 c
207.751 406.6064 210.8262 403.7354 208.4648 402.2051 c
195.0596 393.5215 176.3916 391.2949 169.8018 398.1855 c
163.5957 404.7441 165.6982 420.3213 182.9824 422.3032 c
191.5742 423.2881 197.9619 421.5342 206.2676 418.8579 c
208.8271 418.0327 204.4336 413.439 201.874 414.2642 c
201.874 414.2642 l
b/BBAccumRotation (0.000000) XT
0.4219 w129.7422 432.7314 m
134.3857 439.854 145.1895 442.7881 152.4453 448.9722 c
153.7793 451.1826 152.167 443.6738 150.833 441.4634 c
146.5703 434.4023 140.1074 434.9526 135.6465 428.1099 c
132.835 423.7964 126.9307 428.418 129.7422 432.7314 c
129.7422 432.7314 l
b/BBAccumRotation (0.000000) XT
153.251 448.9722 m
153.251 434.5361 153.958 424.98 154.4609 410.5435 c
155.0703 393.1621 156.2979 378.8945 153.6543 361.5137 c
153.2568 358.8994 143.583 359.7822 143.9805 362.3965 c
146.5762 379.4668 147.2051 428.2119 145.5928 440.1382 c
145.2383 442.7598 153.251 451.6226 153.251 448.9722 c
153.251 448.9722 l
b/BBAccumRotation (0.000000) XT
135.7861 366.1465 m
142.7939 366.7109 146.6123 364.167 153.5176 363.0381 c
157.3604 362.4189 160.5752 362.9238 163.4014 359.8271 c
165.1113 357.9531 162.5469 355.1416 160.8359 357.0156 c
158.623 359.4414 155.9961 358.6201 152.9854 359.1055 c
146.3867 360.1846 143.0195 358.5195 136.3223 357.9795 c
133.9102 357.7852 133.374 365.9521 135.7861 366.1465 c
135.7861 366.1465 l
b/BBAccumRotation (0.000000) XT
153.4531 412.0894 m
157.8867 422.6904 157.7744 439.7266 164.3359 450.0767 c
168.0615 455.9609 172.5586 460.4268 178.9141 461.7476 c
185.6338 463.1206 191.1299 460.1582 194.8877 453.7935 c
197.6377 448.9727 198.8301 445.0981 198.3896 439.313 c
197.8008 431.3052 190.8955 424.8101 183.7061 426.4893 c
177.3848 427.9834 173.2627 438.1313 177.4766 443.4287 c
180.0068 446.6387 185.5605 448.355 187.6025 444.5918 c
190.7373 438.813 186.1592 436.1245 183.9668 435.7451 c
181.5771 435.332 180.085 440.6079 182.4746 441.0215 c
184.1123 441.3047 185.5283 439.6353 186.9082 440.5801 c
187.6729 441.0586 186.0059 443.7354 185.2959 444.3345 c
183.6543 445.6831 180.75 443.9951 179.4512 442.3467 c
176.8125 439.0298 180.5088 431.312 184.4668 430.3765 c
189.5703 429.1841 194.3555 433.9531 194.7744 439.6377 c
195.1406 444.4541 194.1152 447.647 191.8271 451.6602 c
188.9346 456.5586 184.7559 458.897 179.585 457.8408 c
174.25 456.7319 172.9844 451.6733 169.8564 446.7344 c
163.1162 436.103 165.46 410.9888 156.6777 402.3721 c
154.876 400.6035 151.6514 410.3213 153.4531 412.0894 c
153.4531 412.0894 l
b/BBAccumRotation (0.000000) XT
0.3385 w158.6934 405.4639 m
159.9277 397.7861 168.5684 359.5254 179.9277 357.0859 c
183 356.4258 184.9746 360.2617 185.6455 364.1904 c
186.3193 368.1396 185.1641 373.3096 181.9746 373.3623 c
177.2344 373.4395 178.6953 371.1416 178.0918 368.666 c
177.8027 367.5498 180.3711 366.8076 181.0635 367.4766 c
182.4951 368.8604 184.3086 364.4434 182.877 363.0596 c
181.1816 361.4209 179.2275 362.083 177.6377 363.7217 c
176.1816 365.1963 174.9141 367.3193 175.5381 369.7314 c
176.5781 373.9961 179.7734 378.2705 182.9893 376.5645 c
187.1172 374.4141 189.2334 369.1055 188.2666 363.4473 c
187.2969 357.7676 184.165 353.0752 179.668 353.6436 c
170.6836 354.7607 165.9375 359.916 161.6025 369.9678 c
158.4678 377.1592 153.9463 388.5518 152.6465 396.6299 c
152.2832 398.8867 158.3301 407.7212 158.6934 405.4639 c
158.6934 405.4639 l
b/BBAccumRotation (0.000000) XT
0.4219 w219.3555 449.4141 m
219.3555 432.1416 221.874 409.8628 223.1797 392.5898 c
224.0957 379.3076 223.1914 373.0195 224.5957 359.7461 c
224.8076 357.7471 229.4326 359.3047 233.0605 358.4219 c
235.4482 358.0029 234.7588 352.0645 232.3701 352.4834 c
224.4541 353.8711 211.7725 348.7783 205.6514 354.4463 c
204.0205 355.9551 205.1289 361.5137 207.2637 361.5137 c
210.4307 361.5137 217.4189 355.834 217.7432 359.3047 c
219.0391 372.3027 218.6406 376.3428 217.7432 389.3408 c
216.4287 406.7422 212.5029 432.897 212.5029 450.2979 c
212.5029 452.9478 219.3555 452.0645 219.3555 449.4141 c
219.3555 449.4141 l
b/BBAccumRotation (0.000000) XT
206.5742 454.5186 m
213.4258 458.4941 230.3037 457.5225 234.7891 455.8438 c
245.2705 451.7417 251.7178 438.6172 248.4932 432.4331 c
243.2139 422.3081 229.2363 420.5068 219.875 420.5068 c
217.457 420.5068 216.6504 428.4575 219.0693 428.4575 c
227.8457 428.4575 234.8545 428.9209 242.8506 432.875 c
247.2842 441.709 240.4297 446.916 231.1611 450.543 c
227.3838 451.9565 217.457 451.8682 211.0078 445.6846 c
209.1875 443.9395 204.209 453.9634 206.5742 454.5186 c
206.5742 454.5186 l
b/BBAccumRotation (0.000000) XT
0.2762 w238.543 412.769 m
238.543 404.9756 239.4785 396.6924 240.7188 388.8994 c
241.5898 382.9072 242.3311 380.0654 242.7344 374.3232 c
242.9023 371.9268 240.7275 374.0098 247.5713 373.4395 c
248.9814 371.4521 248.377 369.9063 248.377 367.2559 c
244.9512 365.4893 238.0723 366.4658 232.2539 369.0225 c
230.7051 369.7031 230.2256 372.998 232.2539 372.998 c
235.2637 372.998 237.1855 371.874 237.4941 373.4395 c
238.7256 379.3037 237.8623 379.8008 237.0098 385.665 c
235.7607 393.5156 232.0303 405.3164 232.0303 413.1675 c
232.0303 414.3633 238.543 413.9648 238.543 412.769 c
238.543 412.769 l
b/BBAccumRotation (0.000000) XT
0.4667 w239.2949 410.6768 m
246.541 412.9722 245.8525 414.7256 253.2969 413.3223 c
258.2568 412.3667 265.5127 408.7227 265.5127 403.96 c
265.5127 397 247.1152 395.1299 236 402.209 c
233.7861 403.6191 234.4736 399.1436 236.6875 397.7334 c
249.2529 389.7314 263.1816 389.5088 269.3594 395.8594 c
275.1768 401.9033 273.2051 416.2588 257.0039 418.085 c
248.9502 418.9927 240.8457 415.6602 233.0605 413.1938 c
230.6611 412.4336 236.8955 409.916 239.2949 410.6768 c
239.2949 410.6768 l
b/BBAccumRotation (0.000000) XT
0.3385 w254.0205 395.5254 m
255.2559 387.8477 263.6934 356.875 275.0537 354.4355 c
278.126 353.7764 280.0996 357.6113 280.7705 361.54 c
281.4453 365.4893 280.29 370.6602 277.1006 370.7119 c
272.3604 370.79 273.8213 368.4902 273.2178 366.0156 c
272.9287 364.8994 275.4971 364.1572 276.1895 364.8262 c
277.6211 366.21 279.4346 361.793 278.0029 360.4092 c
276.3076 358.7705 274.3535 359.4326 272.7627 361.0713 c
271.3066 362.5459 270.04 364.6699 270.6641 367.0811 c
271.7041 371.3457 274.8994 375.6201 278.1152 373.9141 c
282.2432 371.7646 284.3584 366.4551 283.3926 360.7969 c
282.4229 355.1172 279.29 350.4248 274.793 350.9932 c
265.8096 352.1104 261.0635 357.2656 256.7285 367.3174 c
253.5938 374.5078 248.8711 386.5645 247.5713 394.6416 c
247.208 396.8994 253.6572 397.7832 254.0205 395.5254 c
254.0205 395.5254 l
b/BBAccumRotation (0.000000) XT
0.5747 w334.0205 434.3086 m
328.083 439.3682 315.0518 439.8989 309.1162 434.8394 c
304.0049 430.4829 303.8076 425.6504 307.8701 420.5122 c
310.4346 417.2866 319.04 417.8794 323.4365 418.9199 c
334.9541 421.7075 331.4072 426.6602 333.3975 436.9619 c
333.9795 439.9775 339.6221 441.0303 340.4775 438.0615 c
342.583 430.7412 339.9521 426.5908 339.3037 419.2705 c
338.5166 410.415 338.665 405.4512 336.7744 396.7305 c
334.9189 388.1641 333.3896 384.1045 332.1514 375.4072 c
331.1924 368.0459 329.1084 365.7627 336.5107 362.1416 c
339.751 360.5557 333.5244 354.7188 330.2842 356.3037 c
320.8721 360.9092 322.2158 361.2715 323.4365 370.6318 c
324.6885 379.4443 325.9131 383.1768 327.7939 391.8574 c
329.6396 400.3818 332.0049 406.5498 332.7744 415.2056 c
333.3721 421.9473 336.9756 430.1826 335.0342 436.9238 c
334.1807 439.8921 341.1025 440.1201 340.5205 437.1045 c
338.1514 424.8511 336.5146 416.3984 322.8135 413.083 c
316.001 411.4707 302.5049 414.4517 298.5322 419.4507 c
292.9443 426.5171 296.4844 433.0938 303.5127 439.0845 c
311.5908 445.9697 331.5459 447.5615 339.624 440.6768 c
342.2646 438.4253 336.6611 432.0576 334.0205 434.3086 c
334.0205 434.3086 l
b/BBAccumRotation (0.000000) XT
0.6281 w372.8213 394.8682 m
373.4502 386.7021 l
372.6318 383.0234 362.9639 387.4053 363.7803 391.084 c
365.0381 396.7373 l
365.8545 400.416 373.6396 398.5469 372.8213 394.8682 c
372.8213 394.8682 l
b/BBAccumRotation (0.000000) XT
0.4584 w373.5693 421.8042 m
381.7021 427.8086 386.0615 431.7993 395.1104 436.3906 c
397.1572 437.4292 401.1943 437.2256 400.5342 434.98 c
397.2295 419.7803 398.0029 414.3882 387.4189 405.2314 c
386.292 403.6855 379.7764 407.7397 381.5967 407.2568 c
385.0303 406.3457 388.3975 409.0542 391.9424 408.4854 c
399.6709 407.1836 404.4053 401.8779 406.5596 394.1953 c
410.1514 381.6445 407.4482 371.5557 399.9072 361.2197 c
396.001 355.7822 391.9092 352.2695 385.2314 352.0107 c
377.6943 351.7393 370.6748 356.4023 370.0146 364.1514 c
369.4385 371.416 383.5596 376.0566 387.3096 370.125 c
388.958 367.584 389.5498 364.1963 387.5713 361.9932 c
385.0459 359.0742 382.5713 358.1543 379.7314 361.0732 c
377.8115 363.0459 380.9775 366.2988 382.8975 364.3271 c
384.1436 363.0449 385.4053 363.5098 386.5146 364.792 c
387.2588 365.6211 384.4209 368.4834 383.8018 369.4404 c
381.6729 372.8057 373.7432 368.626 374.0713 364.5039 c
374.54 359.0039 377.5459 357.627 382.8975 357.8193 c
388.2061 358.0254 391.0986 360.9326 394.2041 365.2568 c
400.9072 374.4424 404.1787 380.1328 400.9873 391.2871 c
399.2979 397.3154 396.3271 402.1436 390.2627 403.166 c
386.5713 403.7588 384.1553 402.2568 380.5791 403.2061 c
378.7588 403.6885 378.3311 404.9404 379.46 406.4863 c
392.8467 416.3872 393.2979 422.4297 394.0635 435.1196 c
394.7236 437.3652 397.1533 429.9756 395.1084 428.9375 c
386.2939 424.4648 387.2002 423.165 379.2783 417.3164 c
377.0752 415.6895 371.3643 420.1777 373.5693 421.8042 c
373.5693 421.8042 l
b/BBAccumRotation (0.000000) XT
0.4972 w349.6455 411.2788 m
352.0889 414.9238 353.4541 417.1387 355.3447 414.3164 c
356.4893 412.6104 355.1396 394.3643 354.9385 388.8018 c
354.6357 382.0381 354.9385 379.1631 354.9385 372.3994 c
354.9385 368.7539 349.4404 367.5391 349.4404 371.1846 c
349.4404 378.0889 349.9502 382.0615 350.2588 388.9658 c
350.4639 394.6416 352.9678 405.4922 352.4209 406.3086 c
351.2393 408.0713 350.5635 403.499 348.8311 403.3818 c
346.3896 403.2158 346.7959 408.2412 349.6455 411.2788 c
349.6455 411.2788 l
b/BBAccumRotation (0.000000) XT
346.3877 376.6514 m
351.0947 376.6514 353.874 374.1904 358.3682 371.9551 c
360.6846 370.8027 359.5264 365.6162 357.208 366.7686 c
353.1533 368.7861 350.6377 368.4502 346.3877 368.4502 c
343.9443 368.4502 343.9443 376.6514 346.3877 376.6514 c
346.3877 376.6514 l
b/BBAccumRotation (0.000000) XT
0.527 w424.9424 437.0313 m
429.585 418 428.9756 411.4971 428.9756 390.8799 c
428.9756 386.7461 422.5225 388.124 422.5225 392.2578 c
425.3467 406.0342 424.54 417.0552 421.251 440.6611 c
420.3193 444.4766 424.0107 440.8467 424.9424 437.0313 c
424.9424 437.0313 l
b/BBAccumRotation (0.000000) XT
420.79 394.4375 m
424.7842 391.6475 427.8682 390.8125 432.0439 393.1377 c
434.3447 394.4189 435.4697 388.5254 433.1689 387.2441 c
428.0674 384.4033 424.9814 381.96 420.1025 385.3691 c
417.8623 386.9336 418.5498 396.0029 420.79 394.4375 c
420.79 394.4375 l
b/BBAccumRotation (0.000000) XT
420.5029 445.3213 m
429.3916 437.8213 442.2881 452.1855 448.7412 441.8535 c
449.9756 438.2979 447.1514 433.4761 445.917 437.0313 c
441.4814 443.9199 427.5537 427.9971 419.2959 434.9648 c
417.126 436.7959 418.333 447.1523 420.5029 445.3213 c
420.5029 445.3213 l
b/BBAccumRotation (0.000000) XT
424.7822 423.4468 m
429.6299 426.146 429.9678 426.6992 435.0264 426.6992 c
437.4463 426.6992 436.2373 419.8105 433.8174 419.8105 c
429.1943 419.8105 430.3389 420.0195 425.9092 417.5527 c
423.6084 416.271 422.4814 422.165 424.7822 423.4468 c
424.7822 423.4468 l
b/BBAccumRotation (0.000000) XT
444.9072 425.499 m
445.4131 410.4497 448.7412 394.2197 448.7412 379.1699 c
448.7412 365.5596 448.3389 359.1934 y
446.3135 358.3418 446.3115 360.4941 449.5479 359.1934 c
451.9033 358.2471 451.085 349.7188 448.7295 350.665 c
445.1084 352.1201 442.5713 350.6494 439.376 353.7412 c
437.5615 355.4971 437.8428 363.1631 439.8682 364.0156 c
443.9014 354.3721 443.2959 375.877 443.2959 386.7471 c
443.2959 401.6592 441.7842 410.2314 441.2822 425.1436 c
441.1436 429.27 444.7666 429.626 444.9072 425.499 c
444.9072 425.499 l
b/BBAccumRotation (0.000000) XT
445.1221 426.708 m
449.3994 412.0938 452.8955 405.8164 458.2686 393.4121 c
459.4482 390.6875 454.5693 389.0234 455.0479 392.3135 c
457.667 410.3896 462.04 419.9092 470.1084 432.437 c
471.5713 434.707 473.0498 433.6616 473.1436 430.291 c
473.2568 426.2026 472.208 423.772 471.4092 420.0732 c
468.8115 409.0566 465.3291 404.0146 466.8936 392.2578 c
468.9111 377.1035 471.3311 371.5928 474.1533 368.1484 c
476.124 365.7461 475.1123 358.7383 472.9443 360.5713 c
468.5068 362.6377 464.4443 365.7803 463.2627 384.6807 c
462.5244 397.8193 462.8604 401.2119 468.0225 422.3037 c
468.708 425.1025 469.6045 426.8496 469.5166 429.9956 c
469.4229 433.3667 474.0146 430.1191 472.5518 427.8496 c
465.0908 416.2686 460.9932 407.5332 458.5713 390.8242 c
458.0947 387.5332 457.1826 384.7109 456.0029 387.4355 c
450.4854 400.1709 446.2666 408.9312 441.874 423.9351 c
440.792 427.6318 444.0381 430.4043 445.1221 426.708 c
445.1221 426.708 l
b/BBAccumRotation (0.000000) XT
0.67 0 0.42 0 k
1 w 4 M265.21 469.0791 m
265.21 476.8115 276.8506 483.0791 291.21 483.0791 c
305.5693 483.0791 317.21 476.8115 317.21 469.0791 c
317.21 461.3467 305.5693 455.0791 291.21 455.0791 c
276.8506 455.0791 265.21 461.3467 265.21 469.0791 c
265.21 469.0791 l
f/BBAccumRotation (0.000000) XT
0 0.43 0.0039 0 k
300.21 349.5791 m
300.21 354.8262 304.9111 359.0791 310.71 359.0791 c
316.5088 359.0791 321.21 354.8262 321.21 349.5791 c
321.21 344.332 316.5088 340.0791 310.71 340.0791 c
304.9111 340.0791 300.21 344.332 300.21 349.5791 c
300.21 349.5791 l
f/BBAccumRotation (0.000000) XT
Q/BBAccumRotation (0.000000) XT
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
